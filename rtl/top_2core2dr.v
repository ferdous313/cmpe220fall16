// file automatically generated by top_generator script
// this is a memory hierarchy done as a class project for CMPE220 at UCSC
// this specific file was generated for:
// 2 core(s), 
// 2 data cache slice(s) per core, and
// 2 directory(ies)


module top_2core2dr(
   input clk
  ,input reset

   //******************************************
   //*  CORE 0                       *
   //******************************************//
   // icache core 0
  ,input                       core0_coretoic_valid        
  ,output                      core0_coretoic_retry        
  ,input  SC_laddr_type        core0_coretoic_pc           
  ,output                      core0_ictocore_valid        
  ,input                       core0_ictocore_retry        
  ,output I_ictocore_type      core0_ictocore              

   // dcache core 0, slice 0
  ,input                           core0_slice0_coretodc_ld_valid     
  ,output                          core0_slice0_coretodc_ld_retry     
  ,input   I_coretodc_ld_type      core0_slice0_coretodc_ld           
  ,output                          core0_slice0_dctocore_ld_valid     
  ,input                           core0_slice0_dctocore_ld_retry     
  ,output  I_coretodc_ld_type      core0_slice0_dctocore_ld           
  ,input                           core0_slice0_coretodc_std_valid    
  ,output                          core0_slice0_coretodc_std_retry    
  ,input   I_coretodc_std_type     core0_slice0_coretodc_std          
  ,output                          core0_slice0_dctocore_std_ack_valid
  ,input                           core0_slice0_dctocore_std_ack_retry
  ,output  I_dctocore_std_ack_type core0_slice0_dctocore_std_ack      

   // dcache core 0, slice 1
  ,input                           core0_slice1_coretodc_ld_valid     
  ,output                          core0_slice1_coretodc_ld_retry     
  ,input   I_coretodc_ld_type      core0_slice1_coretodc_ld           
  ,output                          core0_slice1_dctocore_ld_valid     
  ,input                           core0_slice1_dctocore_ld_retry     
  ,output  I_coretodc_ld_type      core0_slice1_dctocore_ld           
  ,input                           core0_slice1_coretodc_std_valid    
  ,output                          core0_slice1_coretodc_std_retry    
  ,input   I_coretodc_std_type     core0_slice1_coretodc_std          
  ,output                          core0_slice1_dctocore_std_ack_valid
  ,input                           core0_slice1_dctocore_std_ack_retry
  ,output  I_dctocore_std_ack_type core0_slice1_dctocore_std_ack      



    // core 0 prefetcher 
  ,input  logic                core0_pfgtopfe_op_valid
  ,output logic                core0_pfgtopfe_op_retry
  ,input  I_pfgtopfe_op_type   core0_pfgtopfe_op      

   //******************************************
   //*  CORE 1                       *
   //******************************************//
   // icache core 1
  ,input                       core1_coretoic_valid        
  ,output                      core1_coretoic_retry        
  ,input  SC_laddr_type        core1_coretoic_pc           
  ,output                      core1_ictocore_valid        
  ,input                       core1_ictocore_retry        
  ,output I_ictocore_type      core1_ictocore              

   // dcache core 1, slice 0
  ,input                           core1_slice0_coretodc_ld_valid     
  ,output                          core1_slice0_coretodc_ld_retry     
  ,input   I_coretodc_ld_type      core1_slice0_coretodc_ld           
  ,output                          core1_slice0_dctocore_ld_valid     
  ,input                           core1_slice0_dctocore_ld_retry     
  ,output  I_coretodc_ld_type      core1_slice0_dctocore_ld           
  ,input                           core1_slice0_coretodc_std_valid    
  ,output                          core1_slice0_coretodc_std_retry    
  ,input   I_coretodc_std_type     core1_slice0_coretodc_std          
  ,output                          core1_slice0_dctocore_std_ack_valid
  ,input                           core1_slice0_dctocore_std_ack_retry
  ,output  I_dctocore_std_ack_type core1_slice0_dctocore_std_ack      

   // dcache core 1, slice 1
  ,input                           core1_slice1_coretodc_ld_valid     
  ,output                          core1_slice1_coretodc_ld_retry     
  ,input   I_coretodc_ld_type      core1_slice1_coretodc_ld           
  ,output                          core1_slice1_dctocore_ld_valid     
  ,input                           core1_slice1_dctocore_ld_retry     
  ,output  I_coretodc_ld_type      core1_slice1_dctocore_ld           
  ,input                           core1_slice1_coretodc_std_valid    
  ,output                          core1_slice1_coretodc_std_retry    
  ,input   I_coretodc_std_type     core1_slice1_coretodc_std          
  ,output                          core1_slice1_dctocore_std_ack_valid
  ,input                           core1_slice1_dctocore_std_ack_retry
  ,output  I_dctocore_std_ack_type core1_slice1_dctocore_std_ack      



    // core 1 prefetcher 
  ,input  logic                core1_pfgtopfe_op_valid
  ,output logic                core1_pfgtopfe_op_retry
  ,input  I_pfgtopfe_op_type   core1_pfgtopfe_op      

   //******************************************
   //*  Directory 0                    *
   //******************************************//
  ,output                       dr0_drtomem_req_valid     
  ,input                        dr0_drtomem_req_retry     
  ,output  I_drtomem_req_type   dr0_drtomem_req           
  ,input                        dr0_memtodr_ack_valid     
  ,output                       dr0_memtodr_ack_retry     
  ,input   I_memtodr_ack_type   dr0_memtodr_ack           
  ,output                       dr0_drtomem_wb_valid      
  ,input                        dr0_drtomem_wb_retry      
  ,output  I_drtomem_wb_type    dr0_drtomem_wb            
  ,output  logic                dr0_drtomem_pfreq_valid   
  ,input   logic                dr0_drtomem_pfreq_retry   
  ,output  I_drtomem_pfreq_type dr0_drtomem_pfreq         

   //******************************************
   //*  Directory 1                    *
   //******************************************//
  ,output                       dr1_drtomem_req_valid     
  ,input                        dr1_drtomem_req_retry     
  ,output  I_drtomem_req_type   dr1_drtomem_req           
  ,input                        dr1_memtodr_ack_valid     
  ,output                       dr1_memtodr_ack_retry     
  ,input   I_memtodr_ack_type   dr1_memtodr_ack           
  ,output                       dr1_drtomem_wb_valid      
  ,input                        dr1_drtomem_wb_retry      
  ,output  I_drtomem_wb_type    dr1_drtomem_wb            
  ,output  logic                dr1_drtomem_pfreq_valid   
  ,input   logic                dr1_drtomem_pfreq_retry   
  ,output  I_drtomem_pfreq_type dr1_drtomem_pfreq         

);
endmodule
